Với a , b , c , d là đảo.
X_a,b,1:cây cầu thứ nhất giữa a và b. ( true : tồn tại)
X_a,b,2:cây cầu thứ 2 giữa a và b. ( true : tồn tại)
P1(a,b): có 1 cầu nối qua 
P2(a,b): có 2 cầu nối qua
f(a): số cầu tối đa trên đảo
L(a,b): a và b cùng hàng
C(a,b): a và b cùng cột
Cr(a,b,c,d): P(a,b) giao với P(c,d)
Near(a,b): a và b liền kề


0.
All a,b : P1(a,b) <=> X_a,b,1
	, P2(a,b) <=> X_a,b,1 ^ X_a,b,2
=> all a,b : ~P1(a,b) V X_a,b,1 , ~X_a,b,1 V P1(a,b) , ~P2(a,b) V X_a,b,1, ~P2(a,b) V X_a,b,2, ~X_a,b,1 V ~X_a,b,2 V P2(a,b)
1. Đảo không tự nối với chính nó
All a : ~X_a,a,1


2. Cầu chỉ có thể dọc hoặc ngang
All a, b; X_a,b,1 => ((L(a,b) V C(a,b)) ^ (~(L(a,b) V ~C(a,b)))
=>All a, b; ~X_a,b,1 V L(a,b) V C(a,b) , ~X_a,b,1 V ~L(a,b) V ~C(a,b))

3. Không có cầu giữa 2 đảo liền kề
All a, b; Near(a,b) => ~X_a,b,1
=>All a, b; ~Near(a,b) V ~X_a,b,1

4. Không có cầu cắt nhau
All a, b, c, d; Cr(a,b,c,d) => (~X_a,b,1 V ~X_c,d,1)
=>All a, b, c, d; ~Cr(a,b,c,d) V ~X_a,b,1 V ~X_c,d,1

5. Tối đa 2 cầu 1 cặp đảo
All a, b; P2(a, b) => ~P1(a, b)
=>All a, b; ~P2(a, b) V ~P1(a, b)

6. Tổng số cầu bằng số hiển thị trên đảo
All a , All(b) : sum(X_a,b,1 = true + X_a,b,2 = true) = N ( sử dung pysat.equal để suy ra cnf)


[-3,1] = -X3 V X1
[-1,3] = -X1 V X3
[-4,1] = -X4 V X1
(-X3 V X1) ^ (-X1 V X3) ^ (-X4 V X1)